name: Build and deploy

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    # runs all of the steps inside the specified container rather than on the VM host.
    # Because of this the network configuration changes from host based network to a container network.
    container:
      image: node:14.3-stretch

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Migrate database step 1
        run: |
          node ./migrate-step-1.js
      # - name: Install Deps
      #   run: npm ci
      #
      # - name: Lint
      #   run: npm run lint
      #
      # - name: Test
      #   run: npm run test
      #   env:
      #     DATABASE_CONNECTION_URL: postgresql://postgres:postgres@postgres:${{ job.services.postgres.ports[5432] }}
      #
      # - name: Deploy to now
      #   run: DEPLOYMENT=`npx vercel --token ${{ secrets.NOW_TOKEN }} --confirm`
      #
      # - name: Migrate database
      #   run: npm run migrate
      #   env:
      #     DATABASE_CONNECTION_URL: ${{ secrets.DATABASE_CONNECTION_URL }}
      #
      # - name: Alias Deployment
      #   run: |
      #     npx vercel alias set $DEPLOYMENT maine-go-ladder.xyz --token ${{ secrets.NOW_TOKEN }}
      #     npx vercel alias set $DEPLOYMENT www.maine-go-ladder.xyz --token ${{ secrets.NOW_TOKEN }}
